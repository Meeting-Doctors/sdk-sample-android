plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def currentVersionCode = 1
def dev_build_mode = "\"DEV\""
def staging_build_mode = "\"STAGING\""
def prod_build_mode = "\"PROD\""

android {
    signingConfigs {
        debug {
            storeFile file('sdkIntegrationSample.keystore')
            storePassword '123456789'
            keyPassword '123456789'
            keyAlias 'sdkIntegrationSample'
        }

        staging {
            storeFile file('sdkIntegrationSample.keystore')
            storePassword '123456789'
            keyPassword '123456789'
            keyAlias 'sdkIntegrationSample'
        }

        release {
            storeFile file('sdkIntegrationSample.keystore')
            storePassword '123456789'
            keyPassword '123456789'
            keyAlias 'sdkIntegrationSample'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.meetingdoctors.chatmedico"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        } else {
            throw new FileNotFoundException("Could not read local.properties!")
        }

        buildConfigField 'String', "YOUR_API_KEY", properties.getProperty("API_KEY")
        buildConfigField 'String', "YOUR_TOKEN", properties.getProperty("USER_TOKEN")
        buildConfigField 'String', "ENCRYPTION_PASSWORD", properties.getProperty("sharedPreferencesEncryptionPass")
    }

    buildTypes {

        debug {
            debuggable true
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug_${currentVersionCode}"
            buildConfigField "String", "SDKCHAT_TARGET_ENVIRONMENT", dev_build_mode
            buildConfigField "String", "VIDEOCALL_TARGET_ENVIRONMENT", dev_build_mode
        }

        staging {
            debuggable true
            signingConfig signingConfigs.staging
            versionNameSuffix "-staging_${currentVersionCode}"
            buildConfigField "String", "SDKCHAT_TARGET_ENVIRONMENT", staging_build_mode
            buildConfigField "String", "VIDEOCALL_TARGET_ENVIRONMENT", staging_build_mode

        }

        release {
            shrinkResources true
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            buildConfigField "String", "SDKCHAT_TARGET_ENVIRONMENT", prod_build_mode
            buildConfigField "String", "VIDEOCALL_TARGET_ENVIRONMENT", prod_build_mode
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //implementation 'com.meetingdoctors:customer-chat-sdk:1.23.3'
    implementation 'com.meetingdoctors:videocall-sdk:1.10.0'
    implementation 'com.meetingdoctors:meetingdoctors-security-sdk:1.1.0'

    //MeetingDoctors Local Modules
    implementation project(path: ':meetingdoctors-lib')


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}